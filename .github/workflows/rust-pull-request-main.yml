on:
  repository_dispatch:
    types: [rust-pull-request-main]

jobs:
  flatcar-rust-prs:
    runs-on: ubuntu-latest
    env:
      GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
    steps:
      - uses: actions/checkout@v2
      - name: Fetch latest virtual Rust release
        id: fetch-latest-release
        run: |
          git clone --depth=1 --no-checkout https://github.com/rust-lang/rust
          versionMain=$(git -C rust ls-remote --tags origin | cut -f2 | sed -n "/refs\/tags\/1.[0-9]*.[0-9]*$/s/^refs\/tags\///p" | sort -ruV | head -n1)
          rm -rf rust
          echo ::set-output name=VERSION_MAIN::$(echo ${versionMain})
          echo ::set-output name=BASE_BRANCH_MAIN::main
      - name: Apply patch for main
        id: apply-patch-main
        env:
          BASE_BRANCH: ${{ steps.fetch-latest-release.outputs.BASE_BRANCH_MAIN }}
          VERSION_NEW: ${{ steps.fetch-latest-release.outputs.VERSION_MAIN }}
        run: .github/workflows/rust-apply-patch.sh
      - name: Create pull request for main
        uses: peter-evans/create-pull-request@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: ${{ steps.fetch-latest-release.outputs.BASE_BRANCH_MAIN }}
          branch: rust-${{ steps.fetch-latest-release.outputs.VERSION_MAIN }}-main
          author: Flatcar Buildbot <buildbot@flatcar-linux.org>
          committer: Flatcar Buildbot <buildbot@flatcar-linux.org>
          title: Upgrade virtual Rust in main from ${{ steps.apply-patch-main.outputs.VERSION_OLD }} to ${{ steps.fetch-latest-release.outputs.VERSION_MAIN }}
          commit-message: Upgrade virtual Rust in main from ${{ steps.apply-patch-main.outputs.VERSION_OLD }} to ${{ steps.fetch-latest-release.outputs.VERSION_MAIN }}
          body: Upgrade virtual Rust in main from ${{ steps.apply-patch-main.outputs.VERSION_OLD }} to ${{ steps.fetch-latest-release.outputs.VERSION_MAIN }}
          labels: main
